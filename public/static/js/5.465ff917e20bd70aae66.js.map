{"version":3,"sources":["webpack:///./src/module/chart/HorizonBarChart.js","webpack:///./node_modules/chartjs-plugin-piechart-outlabels/dist/chartjs-plugin-piechart-outlabels.js","webpack:///./src/module/chart/BarChart.js","webpack:///./node_modules/chartjs-plugin-trendline/src/chartjs-plugin-trendline.js","webpack:///./src/module/chart/config/options.js","webpack:///src/views/sample/charts/chartSample.vue","webpack:///./src/views/sample/charts/chartSample.vue?48ff","webpack:///./src/views/sample/charts/chartSample.vue","webpack:///./src/module/chart/LineChart.js","webpack:///./src/module/chart/PieChart.js"],"names":["__WEBPACK_IMPORTED_MODULE_0_vue_chartjs__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__module_chart_config_options__","__webpack_exports__","name","extends","HorizontalBar","mixins","reactiveProp","props","extraOptions","Object","data","ctx","options","chartConfigs","methods","updateGradients","chartData","this","document","getElementById","chartId","getContext","mounted","_this","$watch","newVal","oldVal","renderChart","immediate","Chart$1","helpers","hasOwnProperty","helpers$1","merge","toFontString","font","isNullOrUndef","size","family","style","weight","textSize","lines","i","items","concat","ilen","length","prev","width","string","Math","max","measureText","height","lineHeight","parseFont","value","global","defaults","valueOrDefault","defaultFontSize","resizable","adaptTextSizeToHeight","minSize","maxSize","defaultFontFamily","toLineHeight","defaultFontStyle","min","LABEL_KEY","backgroundColor","context","dataset","borderColor","lineColor","borderRadius","borderWidth","lineWidth","color","display","undefined","padding","top","right","bottom","left","textAlign","stretch","text","zoomOutPercentage","percentPrecision","valuePrecision","outlabeledCharts","trunc","v","isFinite","Chart","outlabeledDoughnut","doughnut","outlabeledPie","pie","customUpdate","reset","controllers","prototype","update","call","me","meta","getMeta","chart","outerRadius","innerRadius","each","arc","index","updateElement","customDoughnut","extend","customPie","positioners","angle","startAngle","endAngle","cosA","cos","sinA","sin","d","stretchedD","x","y","anchor","copy","center","dist","helpers$2","LABEL_KEY$1","classes","el","config","resolve","Error","label","labels","replace","match","map","val","prec","forEach","toFixed","percent","trim","init","encodedText","canvas","slice","toPadding","offsetStep","offset","predictedOffset","_model","abs","computeLabelRect","textRect","computeTextRect","getPoints","labelRect","containsPoint","point","drawText","idx","align","lh","fillStyle","textBaseline","fillText","round","drawLabel","beginPath","roundedRect","closePath","fill","strokeStyle","lineJoin","stroke","drawLine","save","moveTo","lineTo","restore","draw","view","elements","moveLabelToOffset","valid","rectPoints","e","element","elPoints","p","plugins","outlabels","register","id","resize","sizeChanged","afterDatasetUpdate","args","newLabel","datasets","override","configure","total","hidden","dataIndex","datasetIndex","afterDatasetDraw","_view","factory","Bar","pluginTrendlineLinear","afterDraw","chartInstance","yScale","xScale","axis","scales","trendlineLinear","isDatasetVisible","datasetMeta","getDatasetMeta","lineStyle","fitter","LineFitter","lastIndex","startPos","endPos","xy","type","t","add","Date","getTime","x1","getPixelForValue","minx","x2","maxx","y1","f","y2","drawBottom","controller","chartArea","chartWidth","diff","overlapPercentage","addition","subtraction","setLineDash","addFitter","yAxisID","count","sumX","sumX2","sumXY","sumY","parseFloat","det","window","module","exports","commonOption","legend","position","fullWidth","onClick","legendEvent","reverse","boxWidth","fontSize","fontStyle","fontColor","fontFamily","rtl","legendItem","tooltipOptions","tooltips","enabled","mode","titleFontColor","bodyFontColor","bodySpacing","xPadding","intersect","divisionOption","responsive","maintainAspectRatio","basicBarOption","datalabels","xAxes","gridLines","drawBorder","zeroLineColor","ticks","yAxes","circular","borderDash","borderDashOffset","drawOnChartArea","drawTicks","tickMarkLength","suggestedMin","suggestedMax","stepSize","accrcyBarOption","callbacks","tooltipItem","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default","_ticks2","values","basicHorizonBarOption","layout","formatter","nonLegendHorizonBarOption","basicPieChartOptions","totalData","valueRate","basicLineChartOptions","accrcyLineChartOptions","_ticks6","chartSample","components","BarChart","PieChart","HorizonBarChart","LineChart","pieChart","colors","borderAlign","cutoutPercentage","rotation","blueBarChart","isGradientColor","gradientColors","default","gradientStops","horizonBarChart","nonlegendHorizon","lineChart","lineTension","charts_chartSample","render","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","staticStyle","attrs","chart-id","chart-data","extra-options","staticRenderFns","Component","normalizeComponent","__WEBPACK_IMPORTED_MODULE_2_chart_js__","__WEBPACK_IMPORTED_MODULE_3_chartjs_plugin_trendline__","n","Line","Pie"],"mappings":"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","file":"static/js/5.465ff917e20bd70aae66.js","sourcesContent":["import { HorizontalBar, mixins } from 'vue-chartjs';\r\nimport * as chartConfigs from '@/module/chart/config/options';\r\n\r\nexport default {\r\n  name: 'horizon-bar-chart',\r\n  extends: HorizontalBar,\r\n  mixins: [mixins.reactiveProp],  \r\n  props: {\r\n    // 차트 옵션 정보 \r\n    extraOptions: Object,\r\n    // 그라데\r\n    // gradientColors: {\r\n    //   type: Array,\r\n    //   default: () => ['rgba(72,72,176,0.2)', 'rgba(72,72,176,0.0)', 'rgba(119,52,169,0)'],\r\n    //   validator: val =>{\r\n    //     return val.length > 2;\r\n    //   }\r\n    // },\r\n    // gradientStops: {\r\n    //   type: Array,\r\n    //   default: () => [1, 0.4, 0],\r\n    //   validator: val =>{\r\n    //     return val.length > 2;\r\n    //   }\r\n    // },\r\n\r\n    // isGradientColor : Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      ctx: null,\r\n      options: chartConfigs.basicHorizonBarOption\r\n    };\r\n  },\r\n  methods: {\r\n    updateGradients(chartData) {\r\n      if(!chartData) return;\r\n      const ctx = this.ctx || document.getElementById(this.chartId).getContext('2d');\r\n      // console.log(this.isGradientColor)\r\n     \r\n      /*** 차트에 그라데이션 색상 */\r\n      // if(this.isGradientColor) {\r\n      //   const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n      //   gradientStroke.addColorStop(this.gradientStops[0], this.gradientColors[0]);\r\n      //   gradientStroke.addColorStop(this.gradientStops[1], this.gradientColors[1]);\r\n      //   gradientStroke.addColorStop(this.gradientStops[2], this.gradientColors[2]);\r\n\r\n      //   chartData.datasets.forEach(set => {\r\n      //     set.backgroundColor = gradientStroke;\r\n      //   });\r\n      // }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$watch('chartData', (newVal, oldVal) => {\r\n      this.updateGradients(newVal);\r\n      if (!oldVal) {\r\n        this.renderChart(\r\n          this.chartData,\r\n          this.extraOptions\r\n        );\r\n      }\r\n    }, { immediate: true });\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/module/chart/HorizonBarChart.js","/*!\n * chartjs-plugin-piechart-outlabels\n * http://chartjs.org/\n * Version: 0.1.4\n *\n * Copyright 2018 Neckster\n * Released under the MIT license\n * https://github.com/Neckster/chartjs-plugin-piechart-outlabels/blob/master/LICENSE\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('chart.js')) :\n\ttypeof define === 'function' && define.amd ? define(['chart.js'], factory) :\n\t(factory(global.Chart));\n}(this, (function (Chart$1) { 'use strict';\n\nChart$1 = Chart$1 && Chart$1.hasOwnProperty('default') ? Chart$1['default'] : Chart$1;\n\n'use strict';\r\n\r\nvar helpers = Chart$1.helpers;\r\n\r\nvar helpers$1 = helpers.merge(helpers, {\r\n\t// @todo move this method in Chart.helpers.canvas.toFont (deprecates helpers.fontString)\r\n\t// @see https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n\ttoFontString: function(font) {\r\n\t\tif (!font || helpers.isNullOrUndef(font.size) || helpers.isNullOrUndef(font.family)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (font.style ? font.style + ' ' : '')\r\n\t\t\t+ (font.weight ? font.weight + ' ' : '')\r\n\t\t\t+ font.size + 'px '\r\n\t\t\t+ font.family;\r\n\t},\r\n\r\n\t// @todo move this in Chart.helpers.canvas.textSize\r\n\t// @todo cache calls of measureText if font doesn't change?!\r\n\ttextSize: function(ctx, lines, font) {\r\n\t\tvar items = [].concat(lines);\r\n\t\tvar ilen = items.length;\r\n\t\tvar prev = ctx.font;\r\n\t\tvar width = 0;\r\n\t\tvar i;\r\n\r\n\t\tctx.font = font.string;\r\n\r\n\t\tfor (i = 0; i < ilen; ++i) {\r\n\t\t\twidth = Math.max(ctx.measureText(items[i]).width, width);\r\n\t\t}\r\n\r\n\t\tctx.font = prev;\r\n\r\n\t\treturn {\r\n\t\t\theight: ilen * font.lineHeight,\r\n\t\t\twidth: width\r\n\t\t};\r\n\t},\r\n\r\n\t// @todo move this method in Chart.helpers.options.toFont\r\n\tparseFont: function(value, height) {\r\n\t\t\r\n\t\tvar global = Chart$1.defaults.global;\r\n\t\tvar size = helpers.valueOrDefault(value.size, global.defaultFontSize);\r\n\r\n\t\t\r\n\t\tif (value.resizable) {\r\n\t\t\tsize = this.adaptTextSizeToHeight(height, value.minSize, value.maxSize);\r\n\t\t}\r\n\r\n\t\tvar font = {\r\n\t\t\tfamily: helpers.valueOrDefault(value.family, global.defaultFontFamily),\r\n\t\t\tlineHeight: helpers.options.toLineHeight(value.lineHeight, size),\r\n\t\t\tsize: size,\r\n\t\t\tstyle: helpers.valueOrDefault(value.style, global.defaultFontStyle),\r\n\t\t\tweight: helpers.valueOrDefault(value.weight, null),\r\n\t\t\tstring: ''\r\n\t\t};\r\n\r\n\t\tfont.string = helpers.toFontString(font);\r\n\t\treturn font;\r\n\t},\r\n\r\n\tadaptTextSizeToHeight: function(height, min, max) {\r\n\t\tvar size = (height / 100) * 2.5;\r\n\t\tif(min && size < min) {\r\n\t\t\treturn min;\r\n\t\t}\r\n\t\tif(max && size > max) {\r\n\t\t\treturn max;\r\n\t\t}\r\n\t\treturn size;\r\n\t}\r\n});\n\n/**\r\n * @module Options\r\n */\r\n\r\n'use strict';\r\n\r\nvar defaults = {\r\n\r\n\tLABEL_KEY: '$outlabels',\r\n\r\n\t/**\r\n\t * The color used to draw the background of the label rect.\r\n\t * @member {String|Array|Function|null}\r\n\t * @default null (adaptive background)\r\n\t */\r\n\tbackgroundColor: function(context) {\r\n\t\treturn context.dataset.backgroundColor;\r\n\t},\r\n\r\n\t/**\r\n\t * The color used to draw the border of the label rect.\r\n\t * @member {String|Array|Function|null}\r\n\t * @default null (adaptive border color)\r\n\t */\r\n\tborderColor: function(context) {\r\n\t\treturn context.dataset.backgroundColor;\r\n\t},\r\n\r\n\t/**\r\n\t * The color used to draw the line between label and arc of the chart.\r\n\t * @member {String|Array|Function|null}\r\n\t * @default null (adaptive line color)\r\n\t */\r\n\tlineColor: function(context) {\r\n\t\treturn context.dataset.backgroundColor;\r\n\t},\r\n\r\n\t/**\r\n\t * The border radius used to add rounded corners to the label rect.\r\n\t * @member {Number|Array|Function}\r\n\t * @default 0 (not rounded)\r\n\t */\r\n\tborderRadius: 0,\r\n\r\n\t/**\r\n\t * The border width of the surrounding frame.\r\n\t * @member {Number|Array|Function}\r\n\t * @default 0 (no border)\r\n\t */\r\n\tborderWidth: 0,\r\n\r\n\t/**\r\n\t * The width (thickness) of the line between label and chart arc.\r\n\t * @member {Number|Array|Function}\r\n\t * @default 2 \r\n\t */\r\n\tlineWidth: 2,\r\n\r\n\t/**\r\n\t * The color used to draw the label text.\r\n\t * @member {String|Array|Function}\r\n\t * @default white\r\n\t */\r\n\tcolor: 'white',\r\n\r\n\t/**\r\n\t * Whether to display labels global (boolean) or per data (function)\r\n\t * @member {Boolean|Array|Function}\r\n\t * @default true\r\n\t */\r\n\tdisplay: true,\r\n\r\n\t/**\r\n\t * The font options used to draw the label text.\r\n\t * @member {Object|Array|Function}\r\n\t * @prop {Boolean} font.family - defaults to Chart.defaults.global.defaultFontFamily\r\n\t * @prop {Boolean} font.size - defaults to Chart.defaults.global.defaultFontSize\r\n\t * @prop {Boolean} font.style - defaults to Chart.defaults.global.defaultFontStyle\r\n\t * @prop {Boolean} font.weight - defaults to 'normal'\r\n\t * @prop {Boolean} font.maxSize - defaults to undefined (unlimited)\r\n\t * @prop {Boolean} font.minSize - defaults to undefined (unlimited)\r\n\t * @prop {Boolean} font.resizable - defaults to true\r\n\t * @default Chart.defaults.global.defaultFont.*\r\n\t */\r\n\tfont: {\r\n\t\tfamily: undefined,\r\n\t\tsize: undefined,\r\n\t\tstyle: undefined,\r\n\t\tweight: null,\r\n\t\tmaxSize: null,\r\n\t\tminSize: null,\r\n\t\tresizable: true,\r\n\t},\r\n\r\n\t/**\r\n\t * The line height (in pixel) to use for multi-lines labels.\r\n\t * @member {Number|Array|Function|undefined}\r\n\t * @default 1.2\r\n\t */\r\n\tlineHeight: 1.2,\r\n\r\n\r\n\t/**\r\n\t * The padding (in pixels) to apply between the text and the surrounding frame.\r\n\t * @member {Number|Object|Array|Function}\r\n\t * @prop {Number} padding.top - Space above the text.\r\n\t * @prop {Number} padding.right - Space on the right of the text.\r\n\t * @prop {Number} padding.bottom - Space below the text.\r\n\t * @prop {Number} padding.left - Space on the left of the text.\r\n\t * @default 4 (all values)\r\n\t */\r\n\tpadding: {\r\n\t\ttop: 4,\r\n\t\tright: 4,\r\n\t\tbottom: 4,\r\n\t\tleft: 4\r\n\t},\r\n\r\n\t/**\r\n\t * Text alignment for multi-lines labels ('left'|'right'|'start'|'center'|'end').\r\n\t * @member {String|Array|Function}\r\n\t * @default 'center'\r\n\t */\r\n\ttextAlign: 'center',\r\n\r\n\t/**\r\n\t * The length of the line between label and chart arc.\r\n\t * @member {Number|Array|Function|undefined}\r\n\t * @default 40\r\n\t */\r\n\tstretch: 40,\r\n\r\n\t/**\r\n\t * The text of the label.\r\n\t * @member {String}\r\n\t * @default '%l %p' (label name and value percentage)\r\n\t */\r\n\ttext: '%l %p',\r\n\r\n\t/**\r\n\t * The level of zoom (out) for pie/doughnut chart in percent.\r\n\t * @member {Number}\r\n\t * @default 50 (%)\r\n\t */\r\n\tzoomOutPercentage: 50,\r\n\r\n\t/**\r\n\t * The count of numbers after the point separator for float values of percent property\r\n\t * @member {Number}\r\n\t * @default 1\r\n\t */\r\n\tpercentPrecision: 1,\r\n\t\r\n\t/**\r\n\t * The count of numbers after the point separator for float values of value property\r\n\t * @member {Number}\r\n\t * @default 3\r\n\t */\r\n\tvaluePrecision: 3\r\n};\n\n'use strict';\r\n\r\nvar outlabeledCharts = {\r\n\tinit: function() {\r\n\t\t/* HOTFIX: fix trunc function for IE-11 */\r\n\t\tif (!Math.trunc) {\r\n\t\t\tMath.trunc = function(v) {\r\n\t\t\t\tv = +v;\r\n\t\t\t\treturn (v - v % 1)   ||   (!isFinite(v) || v === 0 ? v : v < 0 ? -0 : 0);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tChart.defaults.outlabeledDoughnut = Chart.defaults.doughnut;\r\n\t\tChart.defaults.outlabeledPie = Chart.defaults.pie;\r\n\r\n\t\tvar customUpdate = function(reset) {\r\n\t\t\tChart.controllers.doughnut.prototype.update.call(this);\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar zoomOutPercentage = me.chart.options.zoomOutPercentage || defaults.zoomOutPercentage;\r\n\r\n\t\t\tme.outerRadius *= 1 - zoomOutPercentage / 100;\r\n\t\t\tme.innerRadius *= 1 - zoomOutPercentage / 100;\r\n\r\n\t\t\tChart.helpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tvar customDoughnut = Chart.controllers.doughnut.extend({\r\n\t\t\tupdate: customUpdate\r\n\t\t});\r\n\r\n\t\tvar customPie = Chart.controllers.pie.extend({\r\n\t\t\tupdate: customUpdate\r\n\t\t});\r\n\r\n\t\tChart.controllers.outlabeledPie = customPie;\r\n\t\tChart.controllers.outlabeledDoughnut = customDoughnut;\r\n\t}\r\n};\n\n'use strict';\r\n\r\nvar positioners = {\r\n\tcenter: function(arc, stretch) {\r\n\t\tvar angle = (arc.startAngle + arc.endAngle) / 2;\r\n\t\tvar cosA = Math.cos(angle);\r\n\t\tvar sinA = Math.sin(angle);\r\n\t\tvar d = arc.outerRadius;\r\n\r\n\t\tvar stretchedD = d + stretch;\r\n\t\treturn {\r\n\t\t\tx: arc.x + cosA * stretchedD,\r\n\t\t\ty: arc.y + sinA * stretchedD,\r\n\t\t\td: stretchedD,\r\n\t\t\tarc: arc,\r\n\t\t\tanchor: {\r\n\t\t\t\tx: arc.x + cosA * d,\r\n\t\t\t\ty: arc.y + sinA * d,\r\n\t\t\t},\r\n\t\t\tcopy: {\r\n\t\t\t\tx: arc.x + cosA * stretchedD,\r\n\t\t\t\ty: arc.y + sinA * stretchedD\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\tmoveFromAnchor: function(center, dist) {\r\n\t\tvar arc = center.arc;\r\n\t\tvar d = center.d;\r\n\t\tvar angle = (arc.startAngle + arc.endAngle) / 2;\r\n\t\tvar cosA = Math.cos(angle);\r\n\t\tvar sinA = Math.sin(angle);\r\n\r\n\t\td += dist;\r\n\r\n\t\treturn {\r\n\t\t\tx: arc.x + cosA * d,\r\n\t\t\ty: arc.y + sinA * d,\r\n\t\t\td: d,\r\n\t\t\tarc: arc,\r\n\t\t\tanchor: center.anchor,\r\n\t\t\tcopy: {\r\n\t\t\t\tx: arc.x + cosA * d,\r\n\t\t\t\ty: arc.y + sinA * d\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n};\n\n'use strict';\r\n\r\nvar helpers$2 = Chart$1.helpers;\r\nvar LABEL_KEY$1 = defaults.LABEL_KEY;\r\n\r\nvar classes = {\r\n\tOutLabel: function(el, index, ctx, config, context) {\r\n\t\tvar resolve = Chart$1.helpers.options.resolve;\r\n\t\t// Check whether the label should be displayed\r\n\t\tif (!resolve([config.display, true], context, index)) {\r\n\t\t\tthrow new Error('Label display property is set to false.');\r\n\t\t}\r\n\t\t// Init text\r\n\t\tvar value = context.dataset.data[index];\r\n\t\tvar label = context.labels[index];\r\n\t\tvar text = resolve([config.text, defaults.text], context, index);\r\n\r\n\t\t/* Replace label marker */\r\n\t\ttext = text.replace(/%l/gi, label);\r\n\r\n\t\t/* Replace value marker with possible precision value */\r\n\t\t(text.match(/%v\\.?(\\d*)/gi) || []).map(function(val) {\r\n\t\t\tvar prec = val.replace(/%v\\./gi, '');\r\n\t\t\tif (prec.length) {\r\n\t\t\t\treturn +prec;\r\n\t\t\t} else {\r\n\t\t\t\treturn config.valuePrecision || defaults.valuePrecision;\r\n\t\t\t}\r\n\t\t}).forEach(function(val) {\r\n\t\t\ttext = text.replace(/%v\\.?(\\d*)/i, value.toFixed(val));\r\n\t\t});\r\n\r\n\t\t/* Replace percent marker with possible precision value */\r\n\t\t(text.match(/%p\\.?(\\d*)/gi) || []).map(function(val) {\r\n\t\t\tvar prec = val.replace(/%p\\./gi, '');\r\n\t\t\tif (prec.length) {\r\n\t\t\t\treturn +prec;\r\n\t\t\t} else  {\r\n\t\t\t\treturn config.percentPrecision || defaults.percentPrecision;\r\n\t\t\t}\r\n\t\t}).forEach(function(val) {\r\n\t\t\ttext = text.replace(/%p\\.?(\\d*)/i, (context.percent * 100).toFixed(val) + '%');\r\n\t\t});\r\n\r\n\t\t// Count lines\r\n\t\tvar lines = text.match(/[^\\r\\n]+/g);\r\n\r\n\t\t// If no lines => nothng to display\r\n\t\tif (!lines || !lines.length) {\r\n\t\t\tthrow new Error('No text to show.');\r\n\t\t}\r\n\r\n\t\t// Remove unnecessary spaces\r\n\t\tfor (var i = 0; i < lines.length; ++i) {\r\n\t\t\tlines[i] = lines[i].trim();\r\n\t\t}\r\n\r\n\t\t/* ===================== CONSTRUCTOR ==================== */\r\n\t\tthis.init = function(text, lines) {\r\n\t\t\t// If everything ok -> begin initializing\r\n\t\t\tthis.encodedText = config.text;\r\n\t\t\tthis.text = text;\r\n\t\t\tthis.lines = lines;\r\n\t\t\tthis.label = label;\r\n\t\t\tthis.value = value;\r\n\t\t\tthis.ctx = ctx;\r\n\r\n\t\t\t// Init style\r\n\t\t\tthis.style = {\r\n\t\t\t\tbackgroundColor: resolve([config.backgroundColor, defaults.backgroundColor, 'black'], context, index),\r\n\t\t\t\tborderColor: resolve([config.borderColor, defaults.borderColor, 'black'], context, index),\r\n\t\t\t\tborderRadius: resolve([config.borderRadius, 0], context, index),\r\n\t\t\t\tborderWidth: resolve([config.borderWidth, 0], context, index),\r\n\t\t\t\tlineWidth: resolve([config.lineWidth, 2], context, index),\r\n\t\t\t\tlineColor: resolve([config.lineColor, defaults.lineColor, 'black'], context, index),\r\n\t\t\t\tcolor: resolve([config.color, 'white'], context, index),\r\n\t\t\t\tfont: helpers$2.parseFont(resolve([config.font, {resizable: true}]), ctx.canvas.style.height.slice(0, -2)),\r\n\t\t\t\tpadding: helpers$2.options.toPadding(resolve([config.padding, 0], context, index)),\r\n\t\t\t\ttextAlign: resolve([config.textAlign, 'left'], context, index),\r\n\t\t\t};\r\n\r\n\t\t\tthis.stretch = resolve([config.stretch, 40], context, index);\r\n\t\t\tthis.size = helpers$2.textSize(ctx, this.lines, this.style.font);\r\n\r\n\t\t\tthis.offsetStep = this.size.width / 20;\r\n\t\t\tthis.offset = {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\t\t\tthis.predictedOffset = this.offset;\r\n\r\n\t\t\tvar angle = -((el._model.startAngle + el._model.endAngle) / 2) / (Math.PI);\r\n\t\t\tvar val = Math.abs(angle - Math.trunc(angle));\r\n\r\n\t\t\tif (val > 0.45 && val < 0.55) {\r\n\t\t\t\tthis.predictedOffset.x = 0;\r\n\t\t\t} else if (angle <= 0.45 && angle >= -0.45) {\r\n\t\t\t\tthis.predictedOffset.x = this.size.width / 2;\r\n\t\t\t} else if (angle >= -1.45 && angle <= -0.55) {\r\n\t\t\t\tthis.predictedOffset.x = -this.size.width / 2;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.init(text, lines);\r\n\r\n\t\t/* COMPUTING RECTS PART */\r\n\t\tthis.computeLabelRect = function() {\r\n\t\t\tvar width = this.textRect.width + 2 * this.style.borderWidth;\r\n\t\t\tvar height = this.textRect.height + 2 * this.style.borderWidth;\r\n\r\n\t\t\tvar x = this.textRect.x - this.style.padding.left - this.style.borderWidth;\r\n\t\t\tvar y = this.textRect.y - this.style.padding.top - this.style.borderWidth;\r\n\r\n\t\t\twidth += this.style.padding.width;\r\n\t\t\theight += this.style.padding.height;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tthis.computeTextRect = function() {\r\n\t\t\treturn {\r\n\t\t\t\tx: this.center.x - (this.size.width / 2),\r\n\t\t\t\ty: this.center.y - (this.size.height / 2),\r\n\t\t\t\twidth: this.size.width,\r\n\t\t\t\theight: this.size.height\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tthis.getPoints = function() {\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tx: this.labelRect.x,\r\n\t\t\t\t\ty: this.labelRect.y\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tx: this.labelRect.x + this.labelRect.width,\r\n\t\t\t\t\ty: this.labelRect.y\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tx: this.labelRect.x + this.labelRect.width,\r\n\t\t\t\t\ty: this.labelRect.y + this.labelRect.height\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tx: this.labelRect.x,\r\n\t\t\t\t\ty: this.labelRect.y + this.labelRect.height\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t};\r\n\r\n\t\tthis.containsPoint = function(point, offset) {\r\n\t\t\tif (!offset) {\r\n\t\t\t\toffset = 5;\r\n\t\t\t}\r\n\r\n\t\t\treturn\tthis.labelRect.x - offset <= point.x && point.x <= this.labelRect.x + this.labelRect.width + offset\r\n\t\t\t\t\t\t\t&&\r\n\t\t\t\t\t\tthis.labelRect.y - offset <= point.y && point.y <= this.labelRect.y + this.labelRect.height + offset;\r\n\t\t};\r\n\r\n\r\n\t\t/* ======================= DRAWING ======================= */\r\n\t\t// Draw label text\r\n\t\tthis.drawText = function() {\r\n\t\t\tvar align = this.style.textAlign;\r\n\t\t\tvar font = this.style.font;\r\n\t\t\tvar lh = font.lineHeight;\r\n\t\t\tvar color = this.style.color;\r\n\t\t\tvar ilen = this.lines.length;\r\n\t\t\tvar x, y, idx;\r\n\r\n\t\t\tif (!ilen || !color) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tx = this.textRect.x;\r\n\t\t\ty = this.textRect.y + lh / 2;\r\n\r\n\t\t\tif (align === 'center') {\r\n\t\t\t\tx += this.textRect.width / 2;\r\n\t\t\t} else if (align === 'end' || align === 'right') {\r\n\t\t\t\tx += this.textRect.width;\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.font = this.style.font.string;\r\n\t\t\tthis.ctx.fillStyle = color;\r\n\t\t\tthis.ctx.textAlign = align;\r\n\t\t\tthis.ctx.textBaseline = 'middle';\r\n\r\n\t\t\tfor (idx = 0; idx < ilen; ++idx) {\r\n\t\t\t\tthis.ctx.fillText(\r\n\t\t\t\t\tthis.lines[idx],\r\n\t\t\t\t\tMath.round(x),\r\n\t\t\t\t\tMath.round(y),\r\n\t\t\t\t\tMath.round(this.textRect.width)\r\n\t\t\t\t);\r\n\r\n\t\t\t\ty += lh;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Draw label box\r\n\t\tthis.drawLabel = function() {\r\n\t\t\tctx.beginPath();\r\n\t\t\thelpers$2.canvas.roundedRect(\r\n\t\t\t\tthis.ctx,\r\n\t\t\t\tMath.round(this.labelRect.x),\r\n\t\t\t\tMath.round(this.labelRect.y),\r\n\t\t\t\tMath.round(this.labelRect.width),\r\n\t\t\t\tMath.round(this.labelRect.height),\r\n\t\t\t\tthis.style.borderRadius\r\n\t\t\t);\r\n\t\t\tthis.ctx.closePath();\r\n\r\n\t\t\tif (this.style.backgroundColor) {\r\n\t\t\t\tthis.ctx.fillStyle = this.style.backgroundColor || 'black';\r\n\t\t\t\tthis.ctx.fill();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.style.borderColor && this.style.borderWidth) {\r\n\t\t\t\tthis.ctx.strokeStyle = this.style.borderColor;\r\n\t\t\t\tthis.ctx.lineWidth = this.style.borderWidth;\r\n\t\t\t\tthis.ctx.lineJoin = 'miter';\r\n\t\t\t\tthis.ctx.stroke();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.drawLine = function() {\r\n\t\t\tthis.ctx.save();\r\n\r\n\t\t\tthis.ctx.strokeStyle = this.style.lineColor;\r\n\t\t\tthis.ctx.lineWidth = this.style.lineWidth;\r\n\t\t\tthis.ctx.lineJoin = 'miter';\r\n\t\t\tthis.ctx.beginPath();\r\n\t\t\tthis.ctx.moveTo(this.center.anchor.x, this.center.anchor.y);\r\n\t\t\tthis.ctx.lineTo(this.center.copy.x, this.center.copy.y);\r\n\t\t\tthis.ctx.stroke();\r\n\r\n\t\t\tthis.ctx.restore();\r\n\t\t};\r\n\r\n\t\tthis.draw = function() {\r\n\t\t\tthis.drawLabel();\r\n\t\t\tthis.drawText();\r\n\t\t};\r\n\r\n\r\n\t\tthis.update = function(view, elements, max) {\r\n\t\t\tthis.center = positioners.center(view, this.stretch);\r\n\t\t\tthis.moveLabelToOffset();\r\n\r\n\t\t\tthis.center.x += this.offset.x;\r\n\t\t\tthis.center.y += this.offset.y;\r\n\r\n\t\t\tvar valid = false;\r\n\r\n\t\t\twhile (!valid) {\r\n\t\t\t\tthis.textRect = this.computeTextRect();\r\n\t\t\t\tthis.labelRect = this.computeLabelRect();\r\n\t\t\t\tvar rectPoints = this.getPoints();\r\n\r\n\t\t\t\tvalid = true;\r\n\r\n\t\t\t\tfor (var e = 0; e < max; ++e) {\r\n\t\t\t\t\tvar element = elements[e][LABEL_KEY$1];\r\n\t\t\t\t\tif (!element) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar elPoints = element.getPoints();\r\n\r\n\t\t\t\t\tfor (var p = 0; p < rectPoints.length; ++p) {\r\n\t\t\t\t\t\tif (element.containsPoint(rectPoints[p])) {\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.containsPoint(elPoints[p])) {\r\n\t\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!valid) {\r\n\t\t\t\t\tthis.center = positioners.moveFromAnchor(this.center, 1);\r\n\t\t\t\t\tthis.center.x += this.offset.x;\r\n\t\t\t\t\tthis.center.y += this.offset.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.moveLabelToOffset = function() {\r\n\t\t\tif (this.predictedOffset.x <= 0 && this.offset.x > this.predictedOffset.x) {\r\n\t\t\t\tthis.offset.x -= this.offsetStep;\r\n\t\t\t\tif (this.offset.x <= this.predictedOffset.x) {\r\n\t\t\t\t\tthis.offset.x = this.predictedOffset.x;\r\n\t\t\t\t}\r\n\t\t\t} else if (this.predictedOffset.x >= 0 && this.offset.x < this.predictedOffset.x) {\r\n\t\t\t\tthis.offset.x += this.offsetStep;\r\n\t\t\t\tif (this.offset.x >= this.predictedOffset.x) {\r\n\t\t\t\t\tthis.offset.x = this.predictedOffset.x;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n};\n\n'use strict';\r\n\r\noutlabeledCharts.init();\r\n\r\nChart$1.defaults.global.plugins.outlabels = defaults;\r\n\r\nvar LABEL_KEY = defaults.LABEL_KEY;\r\n\r\nfunction configure(dataset, options) {\r\n\tvar override = dataset.outlabels;\r\n\tvar config = {};\r\n\r\n\tif (override === false) {\r\n\t\treturn null;\r\n\t}\r\n\tif (override === true) {\r\n\t\toverride = {};\r\n\t}\r\n\r\n\treturn helpers$1.merge(config, [options, override]);\r\n}\r\n\r\nChart$1.plugins.register({\r\n\tid: 'outlabels',\r\n\r\n\tresize: function(chart, size, options) {\r\n\t\tchart.sizeChanged = true;\r\n\t},\r\n\r\n\tafterDatasetUpdate: function(chart, args, options) {\r\n\t\tvar labels = chart.config.data.labels;\r\n\t\tvar dataset = chart.data.datasets[args.index];\r\n\t\tvar config = configure(dataset, options);\r\n\t\tvar display = config && config.display;\r\n\t\tvar elements = args.meta.data || [];\r\n\t\tvar ctx = chart.ctx;\r\n\t\tvar el, label, percent, newLabel, context, i;\r\n\r\n\t\tctx.save();\r\n\r\n\t\tfor (i = 0; i < elements.length; ++i) {\r\n\t\t\tel = elements[i];\r\n\t\t\tlabel = el[LABEL_KEY];\r\n\t\t\tpercent = dataset.data[i] / args.meta.total;\r\n\t\t\tnewLabel = null;\r\n\r\n\t\t\tif (display && el && !el.hidden) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcontext = {\r\n\t\t\t\t\t\tchart: chart,\r\n\t\t\t\t\t\tdataIndex: i,\r\n\t\t\t\t\t\tdataset: dataset,\r\n\t\t\t\t\t\tlabels: labels,\r\n\t\t\t\t\t\tdatasetIndex: args.index,\r\n\t\t\t\t\t\tpercent: percent\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewLabel = new classes.OutLabel(el, i, ctx, config, context);\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tnewLabel = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tlabel && \r\n\t\t\t\tnewLabel && \r\n\t\t\t\t!chart.sizeChanged &&\r\n\t\t\t\t(label.label === newLabel.label) && \r\n\t\t\t\t(label.encodedText === newLabel.encodedText)\r\n\t\t\t) {\r\n\t\t\t\tnewLabel.offset = label.offset;\r\n\t\t\t}\r\n\r\n\t\t\tel[LABEL_KEY] = newLabel;\r\n\t\t}\r\n\r\n\t\tctx.restore();\r\n\t\tchart.sizeChanged = false;\r\n\t},\r\n\tafterDatasetDraw: function(chart, args) {\r\n\t\tvar elements = args.meta.data || [];\r\n\t\tvar ctx = chart.ctx;\r\n\t\tvar el, label, index;\r\n\r\n\t\tfor (var i = 0; i < 2 * elements.length; ++i) {\r\n\t\t\tindex = i < elements.length ? i : i - elements.length;\r\n\r\n\t\t\tel = elements[index];\r\n\t\t\tlabel = el[LABEL_KEY];\r\n\t\t\tif (!label) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (i < elements.length) {\r\n\t\t\t\tlabel.update(el._view, elements, i);\r\n\t\t\t\tlabel.drawLine(ctx);\r\n\t\t\t} else {\r\n\t\t\t\tlabel.draw(ctx);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chartjs-plugin-piechart-outlabels/dist/chartjs-plugin-piechart-outlabels.js\n// module id = 7lRr\n// module chunks = 2 5","import {Bar, mixins} from 'vue-chartjs';\r\nimport * as chartConfigs from '@/module/chart/config/options';\r\n\r\nexport default {\r\n    name: 'bar-chart',\r\n    extends: Bar,\r\n    mixins: [mixins.reactiveProp],\r\n    props: {\r\n        // 차트 옵션 정보 \r\n        extraOptions: Object,        \r\n      },\r\n    data() {\r\n        return {\r\n            ctx: null,\r\n            options: chartConfigs.basicBarOption\r\n        };\r\n    },\r\n    methods: {\r\n        updateGradients(chartData) {\r\n            if(!chartData) return;\r\n            const ctx = this.ctx || document.getElementById(this.chartId).getContext('2d');\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$watch('chartData', (newVal, oldVal) => {\r\n            this.updateGradients(newVal);\r\n\r\n            if (!oldVal) {\r\n                this.renderChart(\r\n                    this.chartData,\r\n                    this.extraOptions\r\n                );\r\n            }\r\n        }, { immediate: true });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/chart/BarChart.js","/*!\r\n * chartjs-plugin-trendline.js\r\n * Version: 0.2.2\r\n *\r\n * Copyright 2020 Marcus Alsterfjord\r\n * Released under the MIT license\r\n * https://github.com/Makanz/chartjs-plugin-trendline/blob/master/README.md\r\n *\r\n * Mod by: vesal: accept also xy-data so works with scatter\r\n */\r\nvar pluginTrendlineLinear = {\r\n    id: \"trendlineLinear\",\r\n    afterDraw: function(chartInstance) {\r\n        var yScale;\r\n        var xScale;\r\n        for (var axis in chartInstance.scales) {\r\n            if ( axis[0] == 'x')\r\n                xScale = chartInstance.scales[axis];\r\n            else\r\n                yScale = chartInstance.scales[axis];\r\n            if ( xScale && yScale ) break;\r\n        }\r\n        var ctx = chartInstance.chart.ctx;\r\n\r\n        chartInstance.data.datasets.forEach(function(dataset, index) {\r\n            if (dataset.trendlineLinear && chartInstance.isDatasetVisible(index) && dataset.data.length != 0) {\r\n                var datasetMeta = chartInstance.getDatasetMeta(index);\r\n                addFitter(datasetMeta, ctx, dataset, xScale, chartInstance.scales[datasetMeta.yAxisID]);\r\n            }\r\n        });\r\n\r\n        ctx.setLineDash([]);\r\n    }\r\n};\r\n\r\nfunction addFitter(datasetMeta, ctx, dataset, xScale, yScale) {\r\n    var style = dataset.trendlineLinear.style || dataset.borderColor;\r\n    var lineWidth = dataset.trendlineLinear.width || dataset.borderWidth;\r\n    var lineStyle = dataset.trendlineLinear.lineStyle || \"solid\";\r\n\r\n    style = (style !== undefined) ? style : \"rgba(169,169,169, .6)\";\r\n    lineWidth = (lineWidth !== undefined) ? lineWidth : 3;\r\n\r\n    var fitter = new LineFitter();\r\n    var lastIndex = dataset.data.length - 1;\r\n    var startPos = datasetMeta.data[0]._model.x;\r\n    var endPos = datasetMeta.data[lastIndex]._model.x;\r\n\r\n    var xy = false;\r\n    if ( dataset.data && typeof dataset.data[0] === 'object') xy = true;\r\n\r\n    dataset.data.forEach(function(data, index) {\r\n\r\n        if(data == null)\r\n            return;\r\n\r\n        if (xScale.options.type === \"time\") {\r\n            var x = data.x != null ? data.x : data.t;\r\n            fitter.add(new Date(x).getTime(), data.y);\r\n        }\r\n        else if (xy) {\r\n            fitter.add(data.x, data.y);\r\n        }\r\n        else {\r\n            fitter.add(index, data);\r\n        }\r\n            \r\n    });\r\n\r\n    var x1 = xScale.getPixelForValue(fitter.minx);\r\n    var x2 = xScale.getPixelForValue(fitter.maxx);\r\n    var y1 = yScale.getPixelForValue(fitter.f(fitter.minx));\r\n    var y2 = yScale.getPixelForValue(fitter.f(fitter.maxx));\r\n    if ( !xy ) { x1 = startPos; x2 = endPos; }\r\n    \r\n    var drawBottom = datasetMeta.controller.chart.chartArea.bottom;\r\n    var chartWidth = datasetMeta.controller.chart.width;\r\n\r\n    if(y1 > drawBottom) { // Left side is below zero\r\n        var diff = y1 - drawBottom;\r\n        var lineHeight = y1 - y2;\r\n        var overlapPercentage = diff / lineHeight;\r\n        var addition = chartWidth * overlapPercentage;\r\n\r\n        y1 = drawBottom;\r\n        x1 = (x1 + addition);\r\n    } else if(y2 > drawBottom) { // right side is below zero\r\n        var diff = y2 - drawBottom;\r\n        var lineHeight = y2 - y1;\r\n        var overlapPercentage = diff / lineHeight;\r\n        var subtraction = chartWidth - (chartWidth * overlapPercentage);\r\n\r\n        y2 = drawBottom;\r\n        x2 = chartWidth - (x2 - subtraction);\r\n    }\r\n\r\n    ctx.lineWidth = lineWidth;\r\n    if (lineStyle === \"dotted\") { ctx.setLineDash([2, 3]); }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x1, y1);\r\n    ctx.lineTo(x2, y2);\r\n    ctx.strokeStyle = style;\r\n    ctx.stroke();\r\n}\r\n\r\nfunction LineFitter() {\r\n    this.count = 0;\r\n    this.sumX = 0;\r\n    this.sumX2 = 0;\r\n    this.sumXY = 0;\r\n    this.sumY = 0;\r\n    this.minx = 1e100;\r\n    this.maxx = -1e100;\r\n}\r\n\r\nLineFitter.prototype = {\r\n    'add': function (x, y) {\r\n        x = parseFloat(x);\r\n\t\ty = parseFloat(y);\r\n        \r\n        this.count++;\r\n        this.sumX += x;\r\n        this.sumX2 += x * x;\r\n        this.sumXY += x * y;\r\n        this.sumY += y;\r\n        if ( x < this.minx ) this.minx = x;\r\n        if ( x > this.maxx ) this.maxx = x;\r\n    },\r\n    'f': function (x) {\r\n        x = parseFloat(x);\r\n        \r\n        var det = this.count * this.sumX2 - this.sumX * this.sumX;\r\n        var offset = (this.sumX2 * this.sumY - this.sumX * this.sumXY) / det;\r\n        var scale = (this.count * this.sumXY - this.sumX * this.sumY) / det;\r\n        return offset + x * scale;\r\n    }\r\n};\r\n\r\n// If we're in the browser and have access to the global Chart obj, register plugin automatically\r\nif (typeof window !== \"undefined\" && window.Chart)\r\n    window.Chart.plugins.register(pluginTrendlineLinear);\r\n\r\n// Otherwise, try to export the plugin\r\ntry {\r\n    module.exports = exports = pluginTrendlineLinear;\r\n} catch (e) {}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chartjs-plugin-trendline/src/chartjs-plugin-trendline.js\n// module id = BWni\n// module chunks = 2 5","import ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport PieChartOutlabels from 'chartjs-plugin-piechart-outlabels';\r\n\r\n// 공통 옵션\r\nexport const commonOption = {\r\n    // 범례\r\n    legend: {\r\n        // 범례 출력 여부\r\n        display: true,\r\n        // 범례 위치(top, left, bottom, right)\r\n        position: 'bottom',\r\n        // 범례 정렬(start, center, end)\r\n        align: 'center',\r\n        // 캔버스 전체너비 설정 여부(default true)\r\n        fullWidth: true,\r\n        // 클릭 이벤트\r\n        onClick: legendEvent,\r\n        // 범례 데이터집합 역순여부\r\n        reverse: false,\r\n        // 범례 라벨 설정\r\n        labels: {\r\n            // 색상 박스의 넓이\r\n            boxWidth: 15,\r\n            // 텍스트의 폰트 크기\r\n            fontSize: 15,\r\n            // 텍스트의 폰트 스타일\r\n            fontStyle: 'normal',\r\n            // 텍스트의 색상\r\n            fontColor: '#000000',\r\n            // 범례 텍스트의 글꼴\r\n            fontFamily: 'Arial',\r\n            // 색상 박스들 행 사이의 패딩\r\n            padding: 15,\r\n        },\r\n        // true 면 범례가 오른쪽부터 왼쪽으로 렌더링됩니다. right to left\r\n        rtl: false,\r\n    },\r\n}\r\n\r\n// 범례 클릭 이벤트\r\nvar legendEvent = function(e, legendItem) {\r\n    return null;\r\n}\r\n\r\nexport const tooltipOptions = {\r\n    tooltips: {\r\n        // 툴팁 활성여부\r\n        enabled : true,\r\n        // 툴팁에서 어떤 요소를 표현할지 설정\r\n        mode: \"nearest\",\r\n        //  배경색\r\n        backgroundColor: '#f5f5f5',\r\n        //  제목 폰트 생상\r\n        titleFontColor: '#333',\r\n        //  본문 폰트 색상\r\n        bodyFontColor: '#666',\r\n        //  툴팁 항목의 위와 아래쪽에 공간 추가\r\n        bodySpacing: 4,\r\n        // 툴팁의 왼쪽과 오른쪽에 패딩을 추가\r\n        xPadding: 12,\r\n        // 기본값(true), 툴팁 모드는 마우스 위치가 요소를 교차할때만 적용, false일 경우에는 항상 적용\r\n        intersect: true,\r\n        // 툴팁 위치에 대한 모드 (average : 툴팁에 보여지는 항목들의 평균 위치, nearest : 이벤트 위치에서 가장 가까운 요소의 위치)\r\n        position: \"nearest\"\r\n    },\r\n}\r\n\r\nexport const divisionOption = {\r\n    // false 일 경우 차트 cavnas 부분의 width 와 height 속성 크기에 맞혀짐\r\n    responsive: true,\r\n    // default value , false일 경우 div의 크기에 맞혀짐\r\n    maintainAspectRatio: false,\r\n}\r\n\r\n// 수직바차트 기본 옵션\r\nexport const basicBarOption = {\r\n    ...commonOption,\r\n    ...tooltipOptions,\r\n    ...divisionOption,\r\n    plugins: {\r\n        datalabels: {\r\n            display: false,\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display:false,\r\n                drawBorder: false,\r\n                color: '#fff',\r\n                zeroLineColor: \"transparent\",\r\n            },\r\n            ticks: {\r\n                display : true,\r\n                max : 1,\r\n                min : 0,\r\n                padding: 10,\r\n                fontColor: \"#000\"\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            type : \"linear\",      // 사용되는 스케일의 유형..??? \r\n            position : \"left\",    // 차트 축의 위치를 지정 (top,left,bottom,right)\r\n            offset : true ,      // true이면 양쪽 가장자리에 추가공간이 추가되고 축이 차트 영역에 맞게 조정 / 기본적으로 막대차트에는 true로 설정\r\n            id : \"y-axis\",      // 데이터 집합과 스케일 축을 함께 연결하는데 사용\r\n            // gridLines : 그리드 선 설정\r\n            gridLines: {    \r\n                display: true,       // 그리드 선 출력 여부를 설정\r\n                circular : false,   // true이면 그리드 선은 원형이며 레이더 차트에서만 가능\r\n                color: '#9e9e9e',      // 그리드의 선색상\r\n                borderDash : [],    // 그리드 선 대쉬의 길이와 공간 : 선종류? 설정하는 것 같음...(실선,점선,,,)\r\n                borderDashOffset : 0.0, // 선 대쉬에 대한 오프셋 \r\n                lineWidth : 0.5,    //그리드 선 두께 \r\n                drawBorder: false,    //   true일때 축과 차트 영역 사이에 있는 가장자리에 테두리르 그림\r\n                drawOnChartArea : true, // true일때 축 선 안에 있는 차트 영역에 선을 그림 , 여러 축과 어떤 그리드 선을 그려야할지 제어가 필요할때 유용\r\n                drawTicks : true, // true일 때 차트 뒤에 축 안에 있는 눈금 뒤에 선을 그림\r\n                tickMarkLength : 10,  // 그리드 선의 축 영역 안에 그려지는 픽셀단위의 길이          \r\n                zeroLineColor: \"transparent\",   // 첫번째 인덱스에 대한 그리드 선의 색깔..\r\n            },\r\n            // ticks : 눈금설정\r\n            ticks: {\r\n                display : true,   // 눈금 라벨 출력 여부\r\n                fontColor : \"#ffffff\",   // 눈금 라벨의 폰트색상\r\n                fontFamily : \"Arial\",  //  눈금 라벨을 위한 글꼴 모음\r\n                fontSize  :11,      // 눈금 라벨 폰트 크기\r\n                fontStyle : \"normal\",   // 눈금 라벨의 폰트 스타일\r\n                lineHeight : 1,    // 텍스트의 각 선의 높이\r\n                reverse : false,  // 눈금 라벨의 반대 순서\r\n                suggestedMin: 0,\r\n                suggestedMax: 10,\r\n                stepSize : 10,\r\n                padding: 10,\r\n                fontColor: \"#9e9e9e\",\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\n// ticks % 표기\r\nexport const accrcyBarOption = {\r\n    ...commonOption,\r\n    ...divisionOption,\r\n    tooltips: {\r\n        // 툴팁 활성여부\r\n        enabled : true,\r\n        // 툴팁에서 어떤 요소를 표현할지 설정\r\n        mode: \"nearest\",\r\n        //  배경색\r\n        backgroundColor: '#f5f5f5',\r\n        //  제목 폰트 생상\r\n        titleFontColor: '#333',\r\n        //  본문 폰트 색상\r\n        bodyFontColor: '#666',\r\n        //  툴팁 항목의 위와 아래쪽에 공간 추가\r\n        bodySpacing: 4,\r\n        // 툴팁의 왼쪽과 오른쪽에 패딩을 추가\r\n        xPadding: 12,\r\n        // 기본값(true), 툴팁 모드는 마우스 위치가 요소를 교차할때만 적용, false일 경우에는 항상 적용\r\n        intersect: true,\r\n        // 툴팁 위치에 대한 모드 (average : 툴팁에 보여지는 항목들의 평균 위치, nearest : 이벤트 위치에서 가장 가까운 요소의 위치)\r\n        position: \"nearest\",\r\n        callbacks: {\r\n            label: function(tooltipItem, data) {\r\n                var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                if (label) {\r\n                    label += ': ';\r\n                }\r\n\r\n                label += data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n                label += \"%\";\r\n\r\n                return label;\r\n            }\r\n        }\r\n    },\r\n    plugins: {\r\n        datalabels: {\r\n            display: false,\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display:false,\r\n                drawBorder: false,\r\n                color: '#fff',\r\n                zeroLineColor: \"transparent\",\r\n            },\r\n            ticks: {\r\n                display : true,\r\n                max : 1,\r\n                min : 0,\r\n                padding: 10,\r\n                fontColor: \"#000\"\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            type : \"linear\",      // 사용되는 스케일의 유형..??? \r\n            position : \"left\",    // 차트 축의 위치를 지정 (top,left,bottom,right)\r\n            offset : true ,      // true이면 양쪽 가장자리에 추가공간이 추가되고 축이 차트 영역에 맞게 조정 / 기본적으로 막대차트에는 true로 설정\r\n            id : \"y-axis\",      // 데이터 집합과 스케일 축을 함께 연결하는데 사용\r\n            // gridLines : 그리드 선 설정\r\n            gridLines: {    \r\n                display: true,       // 그리드 선 출력 여부를 설정\r\n                circular : false,   // true이면 그리드 선은 원형이며 레이더 차트에서만 가능\r\n                color: '#9e9e9e',      // 그리드의 선색상\r\n                borderDash : [],    // 그리드 선 대쉬의 길이와 공간 : 선종류? 설정하는 것 같음...(실선,점선,,,)\r\n                borderDashOffset : 0.0, // 선 대쉬에 대한 오프셋 \r\n                lineWidth : 0.5,    //그리드 선 두께 \r\n                drawBorder: false,    //   true일때 축과 차트 영역 사이에 있는 가장자리에 테두리르 그림\r\n                drawOnChartArea : true, // true일때 축 선 안에 있는 차트 영역에 선을 그림 , 여러 축과 어떤 그리드 선을 그려야할지 제어가 필요할때 유용\r\n                drawTicks : true, // true일 때 차트 뒤에 축 안에 있는 눈금 뒤에 선을 그림\r\n                tickMarkLength : 10,  // 그리드 선의 축 영역 안에 그려지는 픽셀단위의 길이          \r\n                zeroLineColor: \"transparent\",   // 첫번째 인덱스에 대한 그리드 선의 색깔..\r\n            },\r\n            // ticks : 눈금설정\r\n            ticks: {\r\n                display : true,   // 눈금 라벨 출력 여부\r\n                fontColor : \"#ffffff\",   // 눈금 라벨의 폰트색상\r\n                fontFamily : \"Arial\",  //  눈금 라벨을 위한 글꼴 모음\r\n                fontSize  :11,      // 눈금 라벨 폰트 크기\r\n                fontStyle : \"normal\",   // 눈금 라벨의 폰트 스타일\r\n                lineHeight : 1,    // 텍스트의 각 선의 높이\r\n                reverse : false,  // 눈금 라벨의 반대 순서\r\n                suggestedMin: 0,\r\n                suggestedMax: 120,\r\n                stepSize : 20,\r\n                padding: 10,\r\n                fontColor: \"#9e9e9e\",\r\n                callback: function(value, index, values) {\r\n                    return value + \"%\";\r\n                }\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\n// 수평바차트 기본 옵션\r\nexport const basicHorizonBarOption = {\r\n    ...commonOption,\r\n    ...tooltipOptions,\r\n    ...divisionOption,\r\n    layout: {\r\n        padding: {\r\n            right: 110,\r\n            left: 10\r\n        }\r\n    },\r\n    plugins: {\r\n        datalabels: {\r\n            display: true,\r\n            color: '#000000',\r\n            align: 'right',\r\n            anchor: 'end',\r\n            font: {\r\n                weight: 'bold'\r\n            },\r\n            formatter(value, context) {\r\n                return context.chart.data.labels[context.dataIndex] + \", \" + value;\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            type : \"linear\",      // 사용되는 스케일의 유형..??? \r\n            position : \"left\",    // 차트 축의 위치를 지정 (top,left,bottom,right)\r\n            offset : true ,      // true이면 양쪽 가장자리에 추가공간이 추가되고 축이 차트 영역에 맞게 조정 / 기본적으로 막대차트에는 true로 설정\r\n            id : \"x-axis\",      // 데이터 집합과 스케일 축을 함께 연결하는데 사용\r\n            // gridLines : 그리드 선 설정\r\n            gridLines: {    \r\n                display: true,       // 그리드 선 출력 여부를 설정\r\n                circular : false,   // true이면 그리드 선은 원형이며 레이더 차트에서만 가능\r\n                color: '#9e9e9e',      // 그리드의 선색상\r\n                borderDash : [],    // 그리드 선 대쉬의 길이와 공간 : 선종류? 설정하는 것 같음...(실선,점선,,,)\r\n                borderDashOffset : 0.0, // 선 대쉬에 대한 오프셋 \r\n                lineWidth : 0.5,    //그리드 선 두께 \r\n                drawBorder: false,    //   true일때 축과 차트 영역 사이에 있는 가장자리에 테두리르 그림\r\n                drawOnChartArea : true, // true일때 축 선 안에 있는 차트 영역에 선을 그림 , 여러 축과 어떤 그리드 선을 그려야할지 제어가 필요할때 유용\r\n                drawTicks : true, // true일 때 차트 뒤에 축 안에 있는 눈금 뒤에 선을 그림\r\n                tickMarkLength : 10,  // 그리드 선의 축 영역 안에 그려지는 픽셀단위의 길이          \r\n                zeroLineColor: \"transparent\",   // 첫번째 인덱스에 대한 그리드 선의 색깔..\r\n            },\r\n            // ticks : 눈금설정\r\n            ticks: {\r\n                display : true,   // 눈금 라벨 출력 여부\r\n                fontColor : \"#ffffff\",   // 눈금 라벨의 폰트색상\r\n                fontFamily : \"Arial\",  //  눈금 라벨을 위한 글꼴 모음\r\n                fontSize  :11,      // 눈금 라벨 폰트 크기\r\n                fontStyle : \"normal\",   // 눈금 라벨의 폰트 스타일\r\n                lineHeight : 1,    // 텍스트의 각 선의 높이\r\n                reverse : false,  // 눈금 라벨의 반대 순서\r\n                suggestedMin: 0,\r\n                suggestedMax: 100,\r\n                stepSize : 10,\r\n                padding: 10,\r\n                fontColor: \"#9e9e9e\",\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display:false,\r\n                drawBorder: false,\r\n            },\r\n            ticks: {\r\n                display : true,\r\n                max : 1,\r\n                min : 0,\r\n                padding: 0,\r\n                fontColor: \"#000\"\r\n            },\r\n        }]\r\n    }\r\n}\r\n\r\n// 수평바차트 범례 없음\r\nexport const nonLegendHorizonBarOption = {\r\n    ...divisionOption,\r\n    ...tooltipOptions,\r\n    legend: {\r\n        // 범례 출력 여부\r\n        display: false,\r\n    },\r\n    layout: {\r\n        padding: {\r\n            right: 110,\r\n            left: 10\r\n        }\r\n    },\r\n    plugins: {\r\n        datalabels: {\r\n            display: true,\r\n            color: '#000000',\r\n            align: 'right',\r\n            anchor: 'end',\r\n            font: {\r\n                weight: 'bold'\r\n            },\r\n            formatter(value, context) {\r\n                return context.chart.data.labels[context.dataIndex] + \", \" + value;\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            type : \"linear\",      // 사용되는 스케일의 유형..??? \r\n            position : \"left\",    // 차트 축의 위치를 지정 (top,left,bottom,right)\r\n            offset : true ,      // true이면 양쪽 가장자리에 추가공간이 추가되고 축이 차트 영역에 맞게 조정 / 기본적으로 막대차트에는 true로 설정\r\n            id : \"x-axis\",      // 데이터 집합과 스케일 축을 함께 연결하는데 사용\r\n            // gridLines : 그리드 선 설정\r\n            gridLines: {    \r\n                display: true,       // 그리드 선 출력 여부를 설정\r\n                circular : false,   // true이면 그리드 선은 원형이며 레이더 차트에서만 가능\r\n                color: '#9e9e9e',      // 그리드의 선색상\r\n                borderDash : [],    // 그리드 선 대쉬의 길이와 공간 : 선종류? 설정하는 것 같음...(실선,점선,,,)\r\n                borderDashOffset : 0.0, // 선 대쉬에 대한 오프셋 \r\n                lineWidth : 0.5,    //그리드 선 두께 \r\n                drawBorder: false,    //   true일때 축과 차트 영역 사이에 있는 가장자리에 테두리르 그림\r\n                drawOnChartArea : true, // true일때 축 선 안에 있는 차트 영역에 선을 그림 , 여러 축과 어떤 그리드 선을 그려야할지 제어가 필요할때 유용\r\n                drawTicks : true, // true일 때 차트 뒤에 축 안에 있는 눈금 뒤에 선을 그림\r\n                tickMarkLength : 10,  // 그리드 선의 축 영역 안에 그려지는 픽셀단위의 길이          \r\n                zeroLineColor: \"transparent\",   // 첫번째 인덱스에 대한 그리드 선의 색깔..\r\n            },\r\n            // ticks : 눈금설정\r\n            ticks: {\r\n                display : true,   // 눈금 라벨 출력 여부\r\n                fontColor : \"#ffffff\",   // 눈금 라벨의 폰트색상\r\n                fontFamily : \"Arial\",  //  눈금 라벨을 위한 글꼴 모음\r\n                fontSize  :11,      // 눈금 라벨 폰트 크기\r\n                fontStyle : \"normal\",   // 눈금 라벨의 폰트 스타일\r\n                lineHeight : 1,    // 텍스트의 각 선의 높이\r\n                reverse : false,  // 눈금 라벨의 반대 순서\r\n                suggestedMin: 0,\r\n                suggestedMax: 100,\r\n                stepSize : 10,\r\n                padding: 10,\r\n                fontColor: \"#9e9e9e\",\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display:false,\r\n                drawBorder: false,\r\n            },\r\n            ticks: {\r\n                display : true,\r\n                max : 1,\r\n                min : 0,\r\n                padding: 0,\r\n                fontColor: \"#000\"\r\n            },\r\n        }]\r\n    }\r\n}\r\n\r\n// 파이차트 기본 옵션\r\nexport const basicPieChartOptions = {\r\n    // 범례\r\n    legend: {\r\n        // 범례 출력 여부\r\n        display: true,\r\n        // 범례 위치(top, left, bottom, right)\r\n        position: 'bottom',\r\n        // 범례 정렬(start, center, end)\r\n        align: 'center',\r\n        // 캔버스 전체너비 설정 여부(default true)\r\n        fullWidth: true,\r\n        // 클릭 이벤트\r\n        onClick: legendEvent,\r\n        // 범례 데이터집합 역순여부\r\n        reverse: false,\r\n        // 범례 라벨 설정\r\n        labels: {\r\n            // 색상 박스의 넓이\r\n            boxWidth: 15,\r\n            // 텍스트의 폰트 크기\r\n            fontSize: 15,\r\n            // 텍스트의 폰트 스타일\r\n            fontStyle: 'normal',\r\n            // 텍스트의 색상\r\n            fontColor: '#000000',\r\n            // 범례 텍스트의 글꼴\r\n            fontFamily: 'Arial',\r\n            // 색상 박스들 행 사이의 패딩\r\n            padding: 45,\r\n        },\r\n        // true 면 범례가 오른쪽부터 왼쪽으로 렌더링됩니다. right to left\r\n        rtl: false,\r\n    },\r\n    ...divisionOption,\r\n    layout: {\r\n        padding: {\r\n            top: 80,\r\n            bottom: 10\r\n        }\r\n    },\r\n    ...tooltipOptions,\r\n    plugins: {\r\n        datalabels: {\r\n            display: true,\r\n            color: '#000000',\r\n            textAlign: 'center',\r\n            anchor: 'center',\r\n            font: {\r\n              size: 15\r\n            },\r\n            formatter: function(value, context) {\r\n                var idx = context.dataIndex;\r\n                var total = context.dataset.data;\r\n                var totalData = 0;\r\n\r\n                for(var i = 0; i < total.length; i++) {\r\n                    totalData += total[i];\r\n                }\r\n                \r\n                if(totalData > 0) {\r\n                    const valueRate = (value/totalData*100).toFixed(1);\r\n\r\n                    if(valueRate < 28) {\r\n                    return '';\r\n                    } else {\r\n                    return context.chart.data.labels[idx] + \"\\n\" + valueRate + \"%\";\r\n                    }\r\n                } else {\r\n                    return 'None Data';\r\n                }\r\n            }\r\n        },\r\n        outlabels: {\r\n            text: function(context){\r\n                var index = context.dataIndex;\r\n                var value = context.dataset.data;\r\n                var totalData = 0;\r\n                \r\n                for(var i = 0; i < value.length; i++) {\r\n                    totalData += value[i];\r\n                }\r\n                \r\n                const valueRate = (value[index]/totalData*100).toFixed(1);\r\n\r\n                return valueRate >= 28 ? '' :  // draw negative values in red\r\n                    valueRate < 28 ? '%l / %v / (%p)' :    // else, alternate values in blue and green\r\n                    '';\r\n            },\r\n            color: 'white',\r\n            stretch: 20,\r\n            font: {\r\n                resizable: true,\r\n                minSize: 15,\r\n                maxSize: 20\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\n// 라인차트 기본 옵션\r\nexport const basicLineChartOptions = {\r\n    ...commonOption,\r\n    // ...tooltipOptions,\r\n    tooltips: {\r\n        // 툴팁 활성여부\r\n        enabled : true,\r\n        // 툴팁에서 어떤 요소를 표현할지 설정\r\n        mode: \"nearest\",\r\n        //  배경색\r\n        backgroundColor: '#f5f5f5',\r\n        //  제목 폰트 생상\r\n        titleFontColor: '#333',\r\n        //  본문 폰트 색상\r\n        bodyFontColor: '#666',\r\n        //  툴팁 항목의 위와 아래쪽에 공간 추가\r\n        bodySpacing: 4,\r\n        // 툴팁의 왼쪽과 오른쪽에 패딩을 추가\r\n        xPadding: 12,\r\n        // 기본값(true), 툴팁 모드는 마우스 위치가 요소를 교차할때만 적용, false일 경우에는 항상 적용\r\n        intersect: false,\r\n        // 툴팁 위치에 대한 모드 (average : 툴팁에 보여지는 항목들의 평균 위치, nearest : 이벤트 위치에서 가장 가까운 요소의 위치)\r\n        position: \"nearest\"\r\n    },\r\n    ...divisionOption,\r\n    plugins: {\r\n        datalabels: {\r\n            display: false,\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display:false,\r\n                drawBorder: false,\r\n                color: '#fff',\r\n                zeroLineColor: \"transparent\",\r\n            },\r\n            ticks: {\r\n                display : true,\r\n                max : 1,\r\n                min : 0,\r\n                padding: 10,\r\n                fontColor: \"#000\"\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            type : \"linear\",      // 사용되는 스케일의 유형..??? \r\n            position : \"left\",    // 차트 축의 위치를 지정 (top,left,bottom,right)\r\n            offset : true ,      // true이면 양쪽 가장자리에 추가공간이 추가되고 축이 차트 영역에 맞게 조정 / 기본적으로 막대차트에는 true로 설정\r\n            id : \"y-axis\",      // 데이터 집합과 스케일 축을 함께 연결하는데 사용\r\n            // gridLines : 그리드 선 설정\r\n            gridLines: {    \r\n                display: true,       // 그리드 선 출력 여부를 설정\r\n                circular : false,   // true이면 그리드 선은 원형이며 레이더 차트에서만 가능\r\n                color: '#9e9e9e',      // 그리드의 선색상\r\n                borderDash : [],    // 그리드 선 대쉬의 길이와 공간 : 선종류? 설정하는 것 같음...(실선,점선,,,)\r\n                borderDashOffset : 0.0, // 선 대쉬에 대한 오프셋 \r\n                lineWidth : 0.5,    //그리드 선 두께 \r\n                drawBorder: false,    //   true일때 축과 차트 영역 사이에 있는 가장자리에 테두리르 그림\r\n                drawOnChartArea : true, // true일때 축 선 안에 있는 차트 영역에 선을 그림 , 여러 축과 어떤 그리드 선을 그려야할지 제어가 필요할때 유용\r\n                drawTicks : true, // true일 때 차트 뒤에 축 안에 있는 눈금 뒤에 선을 그림\r\n                tickMarkLength : 10,  // 그리드 선의 축 영역 안에 그려지는 픽셀단위의 길이          \r\n                zeroLineColor: \"transparent\",   // 첫번째 인덱스에 대한 그리드 선의 색깔..\r\n            },\r\n            // ticks : 눈금설정\r\n            ticks: {\r\n                display : true,   // 눈금 라벨 출력 여부\r\n                fontColor : \"#ffffff\",   // 눈금 라벨의 폰트색상\r\n                fontFamily : \"Arial\",  //  눈금 라벨을 위한 글꼴 모음\r\n                fontSize  :11,      // 눈금 라벨 폰트 크기\r\n                fontStyle : \"normal\",   // 눈금 라벨의 폰트 스타일\r\n                lineHeight : 1,    // 텍스트의 각 선의 높이\r\n                reverse : false,  // 눈금 라벨의 반대 순서\r\n                suggestedMin: 0,\r\n                suggestedMax: 40,\r\n                stepSize : 10,\r\n                padding: 10,\r\n                fontColor: \"#9e9e9e\",\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\n// ticks %표기\r\nexport const accrcyLineChartOptions = {\r\n    ...commonOption,\r\n    // ...tooltipOptions,\r\n    tooltips: {\r\n        // 툴팁 활성여부\r\n        enabled : true,\r\n        // 툴팁에서 어떤 요소를 표현할지 설정\r\n        mode: \"nearest\",\r\n        //  배경색\r\n        backgroundColor: '#f5f5f5',\r\n        //  제목 폰트 생상\r\n        titleFontColor: '#333',\r\n        //  본문 폰트 색상\r\n        bodyFontColor: '#666',\r\n        //  툴팁 항목의 위와 아래쪽에 공간 추가\r\n        bodySpacing: 4,\r\n        // 툴팁의 왼쪽과 오른쪽에 패딩을 추가\r\n        xPadding: 12,\r\n        // 기본값(true), 툴팁 모드는 마우스 위치가 요소를 교차할때만 적용, false일 경우에는 항상 적용\r\n        intersect: false,\r\n        // 툴팁 위치에 대한 모드 (average : 툴팁에 보여지는 항목들의 평균 위치, nearest : 이벤트 위치에서 가장 가까운 요소의 위치)\r\n        position: \"nearest\",\r\n        callbacks: {\r\n            label: function(tooltipItem, data) {\r\n                var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                if (label) {\r\n                    label += ': ';\r\n                }\r\n\r\n                label += data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n                label += \"%\";\r\n\r\n                return label;\r\n            }\r\n        }\r\n    },\r\n    ...divisionOption,\r\n    plugins: {\r\n        datalabels: {\r\n            display: false,\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display:false,\r\n                drawBorder: false,\r\n                color: '#fff',\r\n                zeroLineColor: \"transparent\",\r\n            },\r\n            ticks: {\r\n                display : true,\r\n                max : 1,\r\n                min : 0,\r\n                padding: 10,\r\n                fontColor: \"#000\"\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            type : \"linear\",      // 사용되는 스케일의 유형..??? \r\n            position : \"left\",    // 차트 축의 위치를 지정 (top,left,bottom,right)\r\n            offset : true ,      // true이면 양쪽 가장자리에 추가공간이 추가되고 축이 차트 영역에 맞게 조정 / 기본적으로 막대차트에는 true로 설정\r\n            id : \"y-axis\",      // 데이터 집합과 스케일 축을 함께 연결하는데 사용\r\n            // gridLines : 그리드 선 설정\r\n            gridLines: {    \r\n                display: true,       // 그리드 선 출력 여부를 설정\r\n                circular : false,   // true이면 그리드 선은 원형이며 레이더 차트에서만 가능\r\n                color: '#9e9e9e',      // 그리드의 선색상\r\n                borderDash : [],    // 그리드 선 대쉬의 길이와 공간 : 선종류? 설정하는 것 같음...(실선,점선,,,)\r\n                borderDashOffset : 0.0, // 선 대쉬에 대한 오프셋 \r\n                lineWidth : 0.5,    //그리드 선 두께 \r\n                drawBorder: false,    //   true일때 축과 차트 영역 사이에 있는 가장자리에 테두리르 그림\r\n                drawOnChartArea : true, // true일때 축 선 안에 있는 차트 영역에 선을 그림 , 여러 축과 어떤 그리드 선을 그려야할지 제어가 필요할때 유용\r\n                drawTicks : true, // true일 때 차트 뒤에 축 안에 있는 눈금 뒤에 선을 그림\r\n                tickMarkLength : 10,  // 그리드 선의 축 영역 안에 그려지는 픽셀단위의 길이          \r\n                zeroLineColor: \"transparent\",   // 첫번째 인덱스에 대한 그리드 선의 색깔..\r\n            },\r\n            // ticks : 눈금설정\r\n            ticks: {\r\n                display : true,   // 눈금 라벨 출력 여부\r\n                fontColor : \"#ffffff\",   // 눈금 라벨의 폰트색상\r\n                fontFamily : \"Arial\",  //  눈금 라벨을 위한 글꼴 모음\r\n                fontSize  :11,      // 눈금 라벨 폰트 크기\r\n                fontStyle : \"normal\",   // 눈금 라벨의 폰트 스타일\r\n                lineHeight : 1,    // 텍스트의 각 선의 높이\r\n                reverse : false,  // 눈금 라벨의 반대 순서\r\n                suggestedMin: 0,\r\n                suggestedMax: 120,\r\n                stepSize : 20,\r\n                padding: 10,\r\n                fontColor: \"#9e9e9e\",\r\n                callback: function(value, index, values) {\r\n                    return value + \"%\";\r\n                }\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/module/chart/config/options.js","<template>\r\n    <div class=\"container statistics\">\r\n        <div class=\"inner\">\r\n            <div class=\"input_group top_box\">\r\n                <div class=\"input_box\">\r\n                    <select class=\"select\">\r\n                        <option>검지정확도</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"input_box\">\r\n                    <select class=\"select\">\r\n                        <option>CCTV 전체</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"input_box\">\r\n                    <input type=\"text\" class=\"input_txt\">\r\n                </div>\r\n                <div class=\"input_box\">\r\n                    <input type=\"text\" class=\"input_txt\">\r\n                </div>\r\n                <div class=\"input_box\">\r\n                    <button class=\"btn btn_md btn_primary\">검색</button>\r\n                </div>\r\n                <div class=\"input_box\">\r\n                    <button class=\"btn btn_md btn_secondary\">Excel 저장</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"graph_helf_box\">\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">1차 검지정확도</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <pie-chart style=\"height:100%\"\r\n                                    chart-id=\"pie-chart\"\r\n                                    :chart-data=\"pieChart.chartData\"\r\n                                    :extra-options=\"pieChart.extraOptions\"\r\n                                    >\r\n                            </pie-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">1차검지 정확도</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <bar-chart style=\"height:100%\"\r\n                                    chart-id=\"bar-chart\"\r\n                                    :chart-data=\"blueBarChart.chartData\"\r\n                                    :extra-options=\"blueBarChart.extraOptions\"\r\n                                    >\r\n                            </bar-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"graph_third_box\">\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">정지차량 검지등급 비교</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <pie-chart style=\"height:100%\"\r\n                                    chart-id=\"pie-chart\"\r\n                                    :chart-data=\"pieChart.chartData\"\r\n                                    :extra-options=\"pieChart.extraOptions\"\r\n                                    >\r\n                            </pie-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">역주행 검지등급 비교</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <pie-chart style=\"height:100%\"\r\n                                    chart-id=\"pie-chart\"\r\n                                    :chart-data=\"pieChart.chartData\"\r\n                                    :extra-options=\"pieChart.extraOptions\"\r\n                                    >\r\n                            </pie-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">보행자 검지등급 비교</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <pie-chart style=\"height:100%\"\r\n                                    chart-id=\"pie-chart\"\r\n                                    :chart-data=\"pieChart.chartData\"\r\n                                    :extra-options=\"pieChart.extraOptions\"\r\n                                    >\r\n                            </pie-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"graph_helf_box\">\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">1차 검지정확도</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <horizon-bar-chart style=\"height:100%\"\r\n                                    chart-id=\"horizon-bar-chart\"\r\n                                    :chart-data=\"horizonBarChart.chartData\"\r\n                                    :extra-options=\"horizonBarChart.extraOptions\"\r\n                                    >\r\n                            </horizon-bar-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">1차검지 정확도</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <horizon-bar-chart style=\"height:100%\"\r\n                                    chart-id=\"non-legend-horizon\"\r\n                                    :chart-data=\"nonlegendHorizon.chartData\"\r\n                                    :extra-options=\"nonlegendHorizon.extraOptions\"\r\n                                    >\r\n                            </horizon-bar-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"graph_helf_box\">\r\n                <div class=\"graph_box\">\r\n                    <h5 class=\"graph_tit\">1차 검지정확도</h5>\r\n                    <div class=\"graph_cont\">\r\n                        <div class=\"graph_bd\">\r\n                            <line-chart style=\"height:100%\"\r\n                                    chart-id=\"line-chart\"\r\n                                    :chart-data=\"lineChart.chartData\"\r\n                                    :extra-options=\"lineChart.extraOptions\"\r\n                                    >\r\n                            </line-chart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import BarChart from \"@/module/chart/BarChart\";\r\n    import PieChart from \"@/module/chart/PieChart\";\r\n    import HorizonBarChart from \"@/module/chart/HorizonBarChart\";\r\n    import LineChart from \"@/module/chart/LineChart\";\r\n    import * as chartConfigs from '@/module/chart/config/options';\r\n    import colorConfig from '@/module/chart/config/color';\r\n    // import BarVue from \"@/views/statistical/charts/BarChart\"\r\n\r\n    export default {\r\n        components : {\r\n            BarChart,\r\n            PieChart,\r\n            HorizonBarChart,\r\n            LineChart,\r\n            // BarVue\r\n        },\r\n        data() {\r\n            return {\r\n                pieChart: {\r\n                    extraOptions : chartConfigs.basicPieChartOptions,\r\n                    chartData: {\r\n                        labels: ['Red', 'Blue', 'Yellow'],    // 차트 x축 라벨값\r\n                        datasets: [{\r\n                            label: \"Countries\",     // 라벨이름\r\n                            fill: true,\r\n                            borderColor: \"#FFFFFF\",\r\n                            borderWidth: 2,     // 차트 border width\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            data: [100, 200, 10],        // 차트\r\n                            backgroundColor : colorConfig.colors.pieChart,\r\n                            borderAlign : \"center\",\r\n                            cutoutPercentage : 0,\r\n                            weight : 1,\r\n                            rotation : 0\r\n                        }]\r\n                    },\r\n                    // isGradientColor : false,        // 그라데이션 적용여부\r\n                    // gradientColors: \"#FFFFFF\",      // 그라데이션 색\r\n                    // gradientStops: [1, 0.4, 0],\r\n                },\r\n                blueBarChart :{\r\n                    extraOptions: chartConfigs.basicBarOption,\r\n                    chartData: {\r\n                        labels: ['2021-01-01', '2021-01-02', '2021-01-03'],    // 차트 x축 라벨값\r\n                        datasets: [{\r\n                            label: \"1급\",     // 라벨이름\r\n                            fill: true,             //\r\n                            backgroundColor: \"#0475F4\",\r\n                            borderColor: \"#0475F4\",\r\n                            borderWidth: 2,     // 차트 border width\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            data: [102, 50, 10],        // 차트\r\n                        },\r\n                        {\r\n                            label: \"2급\",     // 라벨이름\r\n                            fill: true,             //\r\n                            backgroundColor: \"#FF6B23\",\r\n                            borderColor: \"#FF6B23\",\r\n                            borderWidth: 2,     // 차트 border width\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            data: [120, 121, 2],        // 차트\r\n                        }]\r\n                    },\r\n                    isGradientColor : false,        // 그라데이션 적용여부\r\n                    gradientColors: colorConfig.colors.default,      // 그라데이션 색\r\n                    gradientStops: [1, 0.4, 0],\r\n                },\r\n                horizonBarChart: {\r\n                    extraOptions: chartConfigs.basicHorizonBarOption,\r\n                    chartData: {\r\n                        labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],    // 차트 x축 라벨값\r\n                        datasets: [{\r\n                            label: \"펜\",     // 라벨이름\r\n                            fill: true,\r\n                            backgroundColor:\"#0475F4\",\r\n                            // borderColor: \"#D1B2FF\",\r\n                            borderWidth: 2,     // 차트 border width\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            data: [53, 20, 10, 80, 100, 45],        // 차트 데이터\r\n                        },\r\n                        {\r\n                            label: \"노트\",     // 라벨이름\r\n                            fill: true,\r\n                            backgroundColor:\"#FF6B23\",\r\n                            // borderColor: \"#FFB2F5\",\r\n                            borderWidth: 2,     // 차트 border width\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            data: [53, 20, 10, 80, 100, 45],        // 차트 데이터\r\n                        }]\r\n                    },\r\n                },\r\n                nonlegendHorizon: {\r\n                    extraOptions: chartConfigs.nonLegendHorizonBarOption,\r\n                    chartData: {\r\n                        labels: ['자동차동차동차', 'GER', 'AUS', 'UK', 'RO', 'BR'],    // 차트 x축 라벨값\r\n                        datasets: [{\r\n                            label: \"키보\",     // 라벨이름\r\n                            fill: true,\r\n                            backgroundColor:\"#38CA4B\",\r\n                            // borderColor: \"#D1B2FF\",\r\n                            borderWidth: 2,     // 차트 border width\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            data: [100, 20, 10, 80, 100, 45],        // 차트 데이터\r\n                        },\r\n                        {\r\n                            label: \"마우\",     // 라벨이름\r\n                            fill: true,\r\n                            backgroundColor:\"#FFB700\",\r\n                            // borderColor: \"#FFB2F5\",\r\n                            borderWidth: 2,     // 차트 border width\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            data: [53, 20, 10, 80, 100, 45],        // 차트 데이터\r\n                        }]\r\n                    },\r\n                },\r\n                lineChart: {\r\n                    extraOptions: chartConfigs.basicLineChartOptions,\r\n                    chartData: {\r\n                        labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],    // 차트 x축 라벨값\r\n                        datasets: [{\r\n                            label: \"키보\",     // 라벨이름\r\n                            fill: false,\r\n                            backgroundColor:\"#FF6B23\",\r\n                            borderColor: \"#FF6B23\",\r\n                            data: [53, 20, 10, 80, 100, 45],        // 차트 데이터\r\n                            lineTension: 0,\r\n                        },\r\n                        {\r\n                            label: \"마우\",     // 라벨이름\r\n                            fill: false,\r\n                            backgroundColor:\"#29DFA5\",\r\n                            borderColor: \"#29DFA5\",\r\n                            data: [45, 100, 80, 10, 20, 53],        // 차트 데이터\r\n                            lineTension: 0,\r\n                        }],\r\n                    },\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/views/sample/charts/chartSample.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container statistics\"},[_c('div',{staticClass:\"inner\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"graph_helf_box\"},[_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"1차 검지정확도\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('pie-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"pie-chart\",\"chart-data\":_vm.pieChart.chartData,\"extra-options\":_vm.pieChart.extraOptions}})],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"1차검지 정확도\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('bar-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"bar-chart\",\"chart-data\":_vm.blueBarChart.chartData,\"extra-options\":_vm.blueBarChart.extraOptions}})],1)])])]),_vm._v(\" \"),_c('div',{staticClass:\"graph_third_box\"},[_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"정지차량 검지등급 비교\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('pie-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"pie-chart\",\"chart-data\":_vm.pieChart.chartData,\"extra-options\":_vm.pieChart.extraOptions}})],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"역주행 검지등급 비교\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('pie-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"pie-chart\",\"chart-data\":_vm.pieChart.chartData,\"extra-options\":_vm.pieChart.extraOptions}})],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"보행자 검지등급 비교\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('pie-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"pie-chart\",\"chart-data\":_vm.pieChart.chartData,\"extra-options\":_vm.pieChart.extraOptions}})],1)])])]),_vm._v(\" \"),_c('div',{staticClass:\"graph_helf_box\"},[_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"1차 검지정확도\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('horizon-bar-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"horizon-bar-chart\",\"chart-data\":_vm.horizonBarChart.chartData,\"extra-options\":_vm.horizonBarChart.extraOptions}})],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"1차검지 정확도\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('horizon-bar-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"non-legend-horizon\",\"chart-data\":_vm.nonlegendHorizon.chartData,\"extra-options\":_vm.nonlegendHorizon.extraOptions}})],1)])])]),_vm._v(\" \"),_c('div',{staticClass:\"graph_helf_box\"},[_c('div',{staticClass:\"graph_box\"},[_c('h5',{staticClass:\"graph_tit\"},[_vm._v(\"1차 검지정확도\")]),_vm._v(\" \"),_c('div',{staticClass:\"graph_cont\"},[_c('div',{staticClass:\"graph_bd\"},[_c('line-chart',{staticStyle:{\"height\":\"100%\"},attrs:{\"chart-id\":\"line-chart\",\"chart-data\":_vm.lineChart.chartData,\"extra-options\":_vm.lineChart.extraOptions}})],1)])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input_group top_box\"},[_c('div',{staticClass:\"input_box\"},[_c('select',{staticClass:\"select\"},[_c('option',[_vm._v(\"검지정확도\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"input_box\"},[_c('select',{staticClass:\"select\"},[_c('option',[_vm._v(\"CCTV 전체\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"input_box\"},[_c('input',{staticClass:\"input_txt\",attrs:{\"type\":\"text\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"input_box\"},[_c('input',{staticClass:\"input_txt\",attrs:{\"type\":\"text\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"input_box\"},[_c('button',{staticClass:\"btn btn_md btn_primary\"},[_vm._v(\"검색\")])]),_vm._v(\" \"),_c('div',{staticClass:\"input_box\"},[_c('button',{staticClass:\"btn btn_md btn_secondary\"},[_vm._v(\"Excel 저장\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4b8317fd\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/sample/charts/chartSample.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./chartSample.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./chartSample.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4b8317fd\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./chartSample.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/sample/charts/chartSample.vue\n// module id = null\n// module chunks = ","import { Line, mixins} from 'vue-chartjs';\r\nimport * as chartConfigs from '@/module/chart/config/options';\r\nimport ChartJS from \"chart.js\";\r\nimport chartTrendline from \"chartjs-plugin-trendline\";\r\n\r\nexport default {\r\n  name : \"line-chart\",\r\n  extends : Line,\r\n  mixins: [mixins.reactiveProp],    \r\n  props: {\r\n      // 차트 옵션 정보 \r\n      extraOptions: Object,        \r\n      // 그라데\r\n      // gradientColors: {\r\n      // type: Array,\r\n      // default: () => [],\r\n      // validator: val =>{\r\n      //     return val.length > 2;\r\n      // }\r\n      // },\r\n      // gradientStops: {\r\n      // type: Array,\r\n      // default: () => [1, 0.4, 0],\r\n      // validator: val =>{\r\n      //     return val.length > 2;\r\n      // }\r\n      // },\r\n\r\n      // isGradientColor : Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      ctx: null,\r\n      options: chartConfigs.basicLineChartOptions\r\n    };\r\n  },\r\n  methods: {\r\n    updateGradients(chartData) {\r\n      if(!chartData) return;\r\n      const ctx = this.ctx || document.getElementById(this.chartId).getContext('2d');\r\n      // console.log(this.isGradientColor)\r\n      /*** 차트에 그라데이션 색상 */\r\n      // if(this.isGradientColor)\r\n      // {\r\n      //   const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n      //   gradientStroke.addColorStop(this.gradientStops[0], this.gradientColors[0]);\r\n      //   gradientStroke.addColorStop(this.gradientStops[1], this.gradientColors[1]);\r\n      //   gradientStroke.addColorStop(this.gradientStops[2], this.gradientColors[2]);\r\n\r\n      //   chartData.datasets.forEach(set => {\r\n      //     set.backgroundColor = gradientStroke;\r\n      //   });\r\n      // }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$watch('chartData', (newVal, oldVal) => {\r\n      this.updateGradients(newVal);\r\n      if (!oldVal) {\r\n        this.renderChart(\r\n          this.chartData,\r\n          this.extraOptions\r\n        );\r\n      }\r\n    }, { immediate: true });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/module/chart/LineChart.js","import {Pie, mixins} from 'vue-chartjs';\r\nimport * as chartConfigs from '@/module/chart/config/options';\r\n\r\nexport default {\r\n  name : \"pie-chart\",\r\n  extends : Pie,\r\n  mixins: [mixins.reactiveProp],\r\n  props: {\r\n    // 차트 옵션 정보 \r\n    extraOptions: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      ctx: null,\r\n      options: chartConfigs.basicPieChartOptions\r\n    };\r\n  },\r\n  methods: {\r\n    updateGradients(chartData) {\r\n      if(!chartData) return;\r\n      const ctx = this.ctx || document.getElementById(this.chartId).getContext('2d');\r\n      // console.log(this.isGradientColor)\r\n      /*** 차트에 그라데이션 색상 */\r\n      // if(this.isGradientColor)\r\n      // {\r\n      //   const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n      //   gradientStroke.addColorStop(this.gradientStops[0], this.gradientColors[0]);\r\n      //   gradientStroke.addColorStop(this.gradientStops[1], this.gradientColors[1]);\r\n      //   gradientStroke.addColorStop(this.gradientStops[2], this.gradientColors[2]);\r\n\r\n      //   chartData.datasets.forEach(set => {\r\n      //     set.backgroundColor = gradientStroke;\r\n      //   });\r\n      // }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$watch('chartData', (newVal, oldVal) => {\r\n      this.updateGradients(newVal);\r\n      if (!oldVal) {\r\n        this.renderChart(\r\n          this.chartData,\r\n          this.extraOptions\r\n        );\r\n      }\r\n    }, { immediate: true });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/module/chart/PieChart.js"],"sourceRoot":""}